package tn.fynova.spring.service;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;

import org.primefaces.model.charts.ChartData;
import org.primefaces.model.charts.axes.cartesian.CartesianScales;
import org.primefaces.model.charts.axes.cartesian.linear.CartesianLinearAxes;
import org.primefaces.model.charts.axes.cartesian.linear.CartesianLinearTicks;
import org.primefaces.model.charts.bar.BarChartDataSet;
import org.primefaces.model.charts.bar.BarChartModel;
import org.primefaces.model.charts.bar.BarChartOptions;
import org.primefaces.model.charts.donut.DonutChartDataSet;
import org.primefaces.model.charts.donut.DonutChartModel;
import org.primefaces.model.charts.optionconfig.animation.Animation;
import org.primefaces.model.charts.optionconfig.legend.Legend;
import org.primefaces.model.charts.optionconfig.legend.LegendLabel;
import org.primefaces.model.charts.optionconfig.title.Title;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import tn.fynova.spring.repository.ProjectRepository;

@Service
@Transactional
public class StatistiqueProject  {
	@Autowired
	ProjectRepository projectRepository;
	
	private DonutChartModel donutModel;
	
	private BarChartModel barModel;
	
	
	
	public BarChartModel getBarModel() {
		return barModel;
	}

	public void setBarModel(BarChartModel barModel) {
		this.barModel = barModel;
	}

	public DonutChartModel getDonutModel() {
		return donutModel;
	}

	public void setDonutModel(DonutChartModel donutModel) {
		this.donutModel = donutModel;
	}

	@PostConstruct
    public void init() {
        
        createDonutModel();
        createBarModel();
        
    }
	
	//-------------------------
	public void createBarModel() {
        barModel = new BarChartModel();
        ChartData data = new ChartData();

        BarChartDataSet barDataSet = new BarChartDataSet();
        barDataSet.setLabel("My First Dataset");

        List<Number> values = new ArrayList<>();
        float s=0;
        for (int i=0; i<projectRepository.findAll().size();i++) { 
        	if(projectRepository.findAll().get(i).getCategorie().equals("informatique")) {
        		s+=projectRepository.findAll().get(i).getProjectcost();
        	}
        values.add(s); //on obtient la somme des coasts des projets de cat info
        
        for ( i=0; i<projectRepository.findAll().size();i++) { 
        	if(projectRepository.findAll().get(i).getCategorie().equals("agriculture")) {
        		s+=projectRepository.findAll().get(i).getProjectcost();
        	}
        }
        values.add(s);//on obtient la somme des coasts des projets de cat agriculture
        
        for ( i=0; i<projectRepository.findAll().size();i++) { 
        	if(projectRepository.findAll().get(i).getCategorie().equals("entrepreneuriat")) {
        		s+=projectRepository.findAll().get(i).getProjectcost();
        	}
        }
        values.add(s);//on obtient la somme des coasts des projets de cat agriculture
        System.out.println("----------------------------------");
        System.out.println(values);
        System.out.println(projectRepository.findAll().size());
        System.out.println("----------------------------------");

        }
        barDataSet.setData(values);

        List<String> bgColor = new ArrayList<>();
        bgColor.add("rgba(255, 99, 132, 0.2)");
        bgColor.add("rgba(255, 159, 64, 0.2)");
        bgColor.add("rgba(255, 205, 86, 0.2)");
        barDataSet.setBackgroundColor(bgColor);

        List<String> borderColor = new ArrayList<>();
        borderColor.add("rgb(255, 99, 132)");
        borderColor.add("rgb(255, 159, 64)");
        borderColor.add("rgb(255, 205, 86)");
        barDataSet.setBorderColor(borderColor);
        barDataSet.setBorderWidth(1);

        data.addChartDataSet(barDataSet);

        List<String> labels = new ArrayList<>();
        labels.add("informatique");
        labels.add("agriculture");
        labels.add("entrepreneuriat");
        data.setLabels(labels);
        barModel.setData(data);

        //Options
        BarChartOptions options = new BarChartOptions();
        CartesianScales cScales = new CartesianScales();
        CartesianLinearAxes linearAxes = new CartesianLinearAxes();
        linearAxes.setOffset(true);
        CartesianLinearTicks ticks = new CartesianLinearTicks();
        ticks.setBeginAtZero(true);
        linearAxes.setTicks(ticks);
        cScales.addYAxesData(linearAxes);
        options.setScales(cScales);

        Title title = new Title();
        title.setDisplay(true);
        title.setText("Bar Chart");
        options.setTitle(title);

        Legend legend = new Legend();
        legend.setDisplay(true);
        legend.setPosition("top");
        LegendLabel legendLabels = new LegendLabel();
        legendLabels.setFontStyle("bold");
        legendLabels.setFontColor("#2980B9");
        legendLabels.setFontSize(24);
        legend.setLabels(legendLabels);
        options.setLegend(legend);

        // disable animation
        Animation animation = new Animation();
        animation.setDuration(0);
        options.setAnimation(animation);

        barModel.setOptions(options);
    }
	
	//Statistique Projet
	public void createDonutModel() {
        donutModel = new DonutChartModel();
        ChartData data = new ChartData();

        DonutChartDataSet dataSet = new DonutChartDataSet();
        List<Number> values = new ArrayList<>();
        values.add(projectRepository.countByCategorie("informatique"));
        values.add(projectRepository.countByCategorie("agriculture"));
        values.add(projectRepository.countByCategorie("entrepreneuriat"));
        dataSet.setData(values);

        List<String> bgColors = new ArrayList<>();
        bgColors.add("rgb(255, 99, 132)");
        bgColors.add("rgb(54, 162, 235)");
        bgColors.add("rgb(255, 205, 86)");
        dataSet.setBackgroundColor(bgColors);

        data.addChartDataSet(dataSet);
        List<String> labels = new ArrayList<>();
        labels.add("informatique");
        labels.add("agriculture");
        labels.add("entrepreneuriat");
        data.setLabels(labels);

        donutModel.setData(data);
    }
	
	

}
